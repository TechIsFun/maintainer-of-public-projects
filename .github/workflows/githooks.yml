name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout another repo
        uses: actions/checkout@v2
        with:
          repository: TechIsFun/SlidingSwitch
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "package.json, .husky"
          
      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          echo "husky seems already configured, exiting"
          exit 0
          
      - name: Configure git
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "GitHub"
          
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          
      - name: Ensure .gitignore exists
        run: touch .gitignore
        
      - name: Add node_modules to .gitignore
        run: |
          grep -qxF 'node_modules' .gitignore || echo 'node_modules' >> .gitignore
          git commit -m "chore: added node_modules to .gitignore" .gitignore
        
      - name: Debug content of .gitignore
        run: cat .gitignore
          
      - name: Install Husky
        run: npm install husky
        
      - name: Install Commitlint
        run: npm install @commitlint/{cli,config-conventional}

      - name: Setup Husky
        run: |
          npm set-script prepare "husky install"
          npm run prepare
          
      - name: Add pre-commit hook
        run: |
          npx husky add .husky/pre-commit "echo \"sample hook\""
          git add .husky/pre-commit
          
      - name: Add commit-msg hook
        run: |
          cat <<EOF >> .husky/commit-msg
          #!/bin/sh
          . "$(dirname "$0")/_/husky.sh"

          # https://github.com/typicode/husky/issues/861
          npx -c --no-install commitlint --edit "$1"
          EOF
          git add .husky/commit-msg
        
      - name: Create .commitlintrc.json
        run: |
          cat <<EOF >> .commitlintrc.json
          {
            "extends": ["@commitlint/config-conventional"]
          }
          EOF
          
      - name: Debug content of repo
        run: ls

      - name: Debug changed files
        run: git status

      - name: Debug content of pre-commit
        run: |
          cat .husky/pre-commit
          
      - name: Debug content of commit-msg
        run: |
          cat .husky/commit-msg
          
      - name: Get base branch for PR
        run: |
          echo BASE_BRANCH=`git checkout develop &> /dev/null && echo "develop" || git branch --show-current` >> $GITHUB_ENV
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          commit-message: "chore: configure husky for git hooks"
          title: Configure Husky
          body: This PR will add husky with a default hook
          committer: GitHub <noreply@github.com>
          author: maintainer <maintainer@users.noreply.github.com>
          branch: husky
          base: ${{ env.BASE_BRANCH }}
          assignees: techisfun
          reviewers: techisfun
